{"version":3,"file":"static/js/377.75cc8068.chunk.js","mappings":"0LACA,G,QAA4D,yBAA5D,EAAqG,iCAArG,EAA8I,wBAA9I,EAAiL,2BAAjL,EAA4N,gCAA5N,EAA4Q,gCAA5Q,EAA4T,gCAA5T,EAA2W,+BAA3W,EAA0Z,gC,UCA1Z,EAAuB,mBAAvB,EAAmD,qB,SCGpC,SAASA,EAAKC,GACzB,OACI,gBAAKC,UAAWC,EAAW,UACvB,SAAC,KAAO,CAACC,GAAE,oBAAeH,EAAMI,QAAUH,UAAW,YAAW,SAARI,SAA2BH,EAAe,EAAE,EAAE,SAAEF,EAAMM,YAG1H,CCTA,MAA0B,yBCEX,SAASP,EAAKC,GACzB,OACI,gBAAKC,UAAWC,EAAc,SAAEF,EAAMO,aAE9C,C,cCAMC,EAAc,SAACR,GAAW,IAAD,EAE3B,GAA0ES,EAAAA,EAAAA,IAAQ,CAC9EC,KAAM,QADFC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAa,EAAD,EAAEC,UAAaC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAAWC,EAAK,EAALA,MAQhE,OACI,kBAAMC,SAAUL,GALH,SAACM,GACdlB,EAAMmB,WAAWD,EAAKE,cACtBJ,GACJ,IAE2C,WACnC,6BACIf,UAAiB,OAANa,QAAM,IAANA,GAAAA,EAAQM,aAAelB,EAAsB,GACxDmB,KAAK,IACLC,KAAM,IACNC,UAAU,MACVC,YAAY,sBACRb,EAAS,eAAgB,CACzBc,SAAU,iJACVC,UAAW,CACPC,MAAO,EACPC,QAAS,mJAEbL,UAAW,CACPI,MAAO,IACPC,QAAS,sKAIrB,gBAAK3B,UAAWC,EAAmB,UACxB,OAANY,QAAM,IAANA,OAAM,EAANA,EAAQM,gBAAgB,wBAAU,OAANN,QAAM,IAANA,GAAoB,QAAd,EAANA,EAAQM,oBAAY,WAAd,EAAN,EAAsBQ,UAAW,2HAElE,kBAAOD,MAAO,GAAIE,KAAK,SAASC,UAAWf,EAASd,UAAWC,MAK3E,E,wBCXM6B,GAAoBC,E,QAAAA,KACtBC,EAAAA,EAAAA,KA3BkB,SAACC,GACnB,MAAO,CACHC,aAAcD,EAAME,aAAaD,aACjCE,YAAaH,EAAME,aAAaC,YAExC,GAsB6B,CAAElB,WApBZ,SAACmB,GAChB,OAAOC,EAAAA,EAAAA,GAAwBD,EACnC,IAmBIE,EAAAA,EAFsBR,EDeX,SAAkBhC,GAC7B,IAAMyC,EAAWzC,EAAMmC,aAAaO,KAAI,SAACC,EAAMC,GAAK,OAAK,SAAC7C,EAAI,CAAaK,OAAQuC,EAAKE,GAAIvC,SAAUqC,EAAKG,MAAvCF,EAA+C,IAC7GG,EAAW/C,EAAMqC,YAAYK,KAAI,SAACC,EAAMC,GAAK,OAAK,SAAC,EAAO,CAAaI,UAAWL,EAAKE,GAAItC,YAAaoC,EAAKM,MAA7CL,EAAqD,IAE3H,OACI,iBAAK3C,UAAU,UAAS,WACpB,eAAIA,UAAWC,EAAY,sBAC3B,iBAAKD,UAAWC,EAAqB,WACjC,gBAAKD,UAAWC,EAAY,SACvBuC,KAEL,iBAAKxC,UAAWC,EAAe,WAC3B,gBAAKD,UAAWC,EAAoB,SAC/B6C,KAEL,gBAAK9C,UAAWC,EAAoB,UAChC,SAACM,GAAW,UAAKR,cAMzC,ICjCA,G","sources":["webpack://react-kabzda-1/./src/components/Messages/Messages.module.css?8e7e","webpack://react-kabzda-1/./src/components/Messages/User/User.module.css?4b7b","components/Messages/User/User.jsx","webpack://react-kabzda-1/./src/components/Messages/Message/Message.module.css?0dcd","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__M1out\",\"title\":\"Messages_title__xxcPb\",\"dialogsContent\":\"Messages_dialogsContent__d9Y7D\",\"users\":\"Messages_users__lh1u0\",\"messages\":\"Messages_messages__q35da\",\"messagesValue\":\"Messages_messagesValue__FaYeb\",\"messagesInput\":\"Messages_messagesInput__D5gif\",\"textareaError\":\"Messages_textareaError__03pvP\",\"errorMessage\":\"Messages_errorMessage__8EjtL\",\"messageSubmit\":\"Messages_messageSubmit__xlFQh\"};","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__ll1wX\",\"active\":\"User_active__CCkho\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from './User.module.css'\r\n\r\nexport default function User(props) {\r\n    return (\r\n        <div className={style.user}>\r\n            <NavLink to={`/messages/${props.userId}`} className={({ isActive }) => (isActive ? style.active : '')}>{props.userName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__jtINc\"};","import React from \"react\";\r\nimport style from './Message.module.css'\r\n\r\nexport default function User(props) {\r\n    return (\r\n        <div className={style.message}>{props.messageText}</div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from './Messages.module.css';\r\nimport User from \"./User/User\";\r\nimport Message from \"./Message/Message\"\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const { register, handleSubmit, formState: { errors, isValid }, reset } = useForm({\r\n        mode: 'all',\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        props.addMessage(data.messageValue);\r\n        reset()\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <textarea\r\n                className={errors?.messageValue ? style.textareaError : ''}\r\n                rows='3'\r\n                cols={100}\r\n                maxLength='301'\r\n                placeholder=\"Enter your message\"\r\n                {...register('messageValue', {\r\n                    required: 'Поле обязательно для ввода!',\r\n                    minLength: {\r\n                        value: 3,\r\n                        message: 'Минимальная длина 3 символа!'\r\n                    },\r\n                    maxLength: {\r\n                        value: 300,\r\n                        message: 'Максимальная длина 250 символов!'\r\n                    }\r\n                })}\r\n            />\r\n            <div className={style.errorMessage}>\r\n                {errors?.messageValue && <p>{errors?.messageValue?.message || 'Непридвиденая Ошибка'}</p>}\r\n            </div>\r\n            <input value={''} type=\"submit\" disabled={!isValid} className={style.messageSubmit} />\r\n        </form>\r\n        // <input onChange={onChangeMessage} value={props.messageValue} placeholder=\"Enter your message\" type=\"text\" />\r\n        // <button onClick={onAddMessage}>Send</button>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default function Messages(props) {\r\n    const UserInfo = props.dataUserInfo.map((item, index) => <User key={index} userId={item.id} userName={item.name} />)\r\n    const Messages = props.dataMessage.map((item, index) => <Message key={index} messageId={item.id} messageText={item.text} />)\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <h2 className={style.title}>DIALOGS</h2>\r\n            <div className={style.dialogsContent}>\r\n                <div className={style.users}>\r\n                    {UserInfo}\r\n                </div>\r\n                <div className={style.messages}>\r\n                    <div className={style.messagesValue}>\r\n                        {Messages}\r\n                    </div>\r\n                    <div className={style.messagesInput}>\r\n                        <MessageForm {...props} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { addMessageActionCreator } from \"../../redux/messages-reducer\";\r\nimport Messages from \"./Messages\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dataUserInfo: state.messagesPage.dataUserInfo,\r\n        dataMessage: state.messagesPage.dataMessage,\r\n    }\r\n}\r\n\r\nconst addMessage = (completeMessage) => {\r\n    return addMessageActionCreator(completeMessage);\r\n}\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addMessage: () => {\r\n//             dispatch(addMessageActionCreator())\r\n//         },\r\n//         changeMessage: (message) => {\r\n//             dispatch(updateMessageActionCreator(message))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// как работает то, что написано ниже, описано в ProfileContainer\r\n\r\nconst MessagesContainer = compose(\r\n    connect(mapStateToProps, { addMessage }),\r\n    withAuthRedirect\r\n)(Messages);\r\nexport default MessagesContainer;"],"names":["User","props","className","style","to","userId","isActive","userName","messageText","MessageForm","useForm","mode","register","handleSubmit","formState","errors","isValid","reset","onSubmit","data","addMessage","messageValue","rows","cols","maxLength","placeholder","required","minLength","value","message","type","disabled","MessagesContainer","compose","connect","state","dataUserInfo","messagesPage","dataMessage","completeMessage","addMessageActionCreator","withAuthRedirect","UserInfo","map","item","index","id","name","Messages","messageId","text"],"sourceRoot":""}